{"ast":null,"code":"import _defineProperty from \"/home/dci-st128/Desktop/react16-todo/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/dci-st128/Desktop/react16-todo/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport TaskBanner from \"./components/TaskBanner\";\nimport TaskCreator from \"./components/TaskCreator\";\nimport TaskRow from \"./components/TaskRow\";\nimport CompletedSection from \"./components/CompletedSection\";\nimport \"./App.css\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateTaskInputValue = e => {\n      this.setState({\n        newTaskItem: e.target.value\n      });\n    };\n\n    this.toggleTask = task => this.setState({\n      tasks: this.state.tasks.map(t => t.name === task.name ? _objectSpread({}, t, {\n        done: !t.done\n      }) : t)\n    });\n\n    this.tableRows = doneValue => this.state.tasks.filter(t => t.done === doneValue).map(task => React.createElement(TaskRow, {\n      key: task.name,\n      task: task,\n      callback: this.toggleTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n\n    this.createNewTask = task => {\n      if (!this.state.tasks.find(t => t.name === task)) {\n        this.setState({\n          tasks: [...this.state.tasks, {\n            name: task,\n            done: false\n          }]\n        }, () => localStorage.setItem(\"tasks\", JSON.stringify(this.state)));\n      }\n    };\n\n    this.componentDidMount = () => {\n      const data = localStorage.getItem(\"tasks\");\n      this.setState(data != null ? JSON.parse(data) : {\n        username: \"Mauricio\",\n        tasks: [],\n        showCompleted: true\n      });\n    };\n\n    this.render = () => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(TaskBanner, {\n      username: this.state.username,\n      tasks: this.state.tasks,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-4 mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(TaskCreator, {\n      callback: this.createNewTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"table\", {\n      className: \"table table-striped table-bordered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Done\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.tableRows(false))), React.createElement(\"div\", {\n      className: \"bg-secondary text-white text-center p-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(CompletedSection, {\n      description: \"Completed Tasks\",\n      isChecked: this.state.showCompleted,\n      callback: checked => this.setState({\n        showCompleted: checked\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), this.state.showCompleted && React.createElement(\"table\", {\n      className: \"table table-striped table-bordered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Done\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, this.tableRows(true)))))));\n\n    this.state = {\n      username: \"Mauricio\",\n      tasks: [],\n      showCompleted: true\n    };\n  }\n\n}","map":{"version":3,"sources":["/home/dci-st128/Desktop/react16-todo/src/App.js"],"names":["React","Component","TaskBanner","TaskCreator","TaskRow","CompletedSection","App","constructor","props","updateTaskInputValue","e","setState","newTaskItem","target","value","toggleTask","task","tasks","state","map","t","name","done","tableRows","doneValue","filter","createNewTask","find","localStorage","setItem","JSON","stringify","componentDidMount","data","getItem","parse","username","showCompleted","render","checked"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport TaskBanner from \"./components/TaskBanner\";\nimport TaskCreator from \"./components/TaskCreator\";\nimport TaskRow from \"./components/TaskRow\";\nimport CompletedSection from \"./components/CompletedSection\";\n\nimport \"./App.css\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"Mauricio\",\n      tasks: [\n],\n      showCompleted: true\n    };\n  }\n\n  updateTaskInputValue = e => {\n    this.setState({ newTaskItem: e.target.value });\n  };\n\n  toggleTask = task =>\n    this.setState({\n      tasks: this.state.tasks.map(t =>\n        t.name === task.name ? { ...t, done: !t.done } : t\n      )\n    });\n\n  tableRows = doneValue =>\n    this.state.tasks\n      .filter(t => t.done === doneValue)\n      .map(task => (\n        <TaskRow key={task.name} task={task} callback={this.toggleTask} />\n      ));\n\n  createNewTask = task => {\n    if (!this.state.tasks.find(t => t.name === task)) {\n      this.setState(\n        {\n          tasks: [...this.state.tasks, { name: task, done: false }]\n        },\n        () => localStorage.setItem(\"tasks\", JSON.stringify(this.state))\n      );\n    }\n  };\n\n  componentDidMount = () => {\n    const data = localStorage.getItem(\"tasks\");\n    this.setState(\n      data != null\n        ? JSON.parse(data)\n        : {\n            username: \"Mauricio\",\n            tasks: [],\n            showCompleted: true\n          }\n    );\n  };\n\n  render = () => (\n    <div>\n      <TaskBanner username={this.state.username} tasks={this.state.tasks} />\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4 mx-auto\">\n            <TaskCreator callback={this.createNewTask} />\n\n            <table className=\"table table-striped table-bordered\">\n              <thead>\n                <tr>\n                  <th>Description</th>\n                  <th>Done</th>\n                </tr>\n              </thead>\n              <tbody>{this.tableRows(false)}</tbody>\n            </table>\n\n            <div className=\"bg-secondary text-white text-center p-2\">\n              <CompletedSection\n                description=\"Completed Tasks\"\n                isChecked={this.state.showCompleted}\n                callback={checked => this.setState({ showCompleted: checked })}\n              />\n            </div>\n\n            {this.state.showCompleted && (\n              <table className=\"table table-striped table-bordered\">\n                <thead>\n                  <tr>\n                    <th>Description</th>\n                    <th>Done</th>\n                  </tr>\n                </thead>\n                <tbody>{this.tableRows(true)}</tbody>\n              </table>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}